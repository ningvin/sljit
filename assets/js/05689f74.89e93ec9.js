"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[148],{232:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"tutorial/where-to-go-from-here","title":"Where To Go From Here","description":"You should now have a basic understanding of how to use SLJIT. In case things are still unclear or you want to know more about a certain topic, take a look at sljitLir.h.","source":"@site/../tutorial/08-where-to-go-from-here.md","sourceDirName":"tutorial","slug":"/tutorial/where-to-go-from-here","permalink":"/sljit/docs/tutorial/where-to-go-from-here","draft":false,"unlisted":false,"editUrl":"https://github.com/zherczeg/sljit/docs/docs/../tutorial/08-where-to-go-from-here.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Local Variables","permalink":"/sljit/docs/tutorial/local-variables"}}');var n=o(4848),s=o(8453);const i={},a="Where To Go From Here",c={},l=[];function d(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"where-to-go-from-here",children:"Where To Go From Here"})}),"\n",(0,n.jsxs)(t.p,{children:["You should now have a basic understanding of how to use SLJIT. In case things are still unclear or you want to know more about a certain topic, take a look at ",(0,n.jsx)(t.a,{href:"https://github.com/zherczeg/sljit/blob/master/sljit_src/sljitLir.h",children:(0,n.jsx)(t.code,{children:"sljitLir.h"})}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Also, you may have noticed the commented out calls to ",(0,n.jsx)(t.code,{children:"dump_code"})," throughout the sources in this tutorial. If you are interested in what assembly SLJIT actually generates, you can provide your own routine to do so (assuming you are on Linux ",(0,n.jsx)(t.code,{children:"x86-32"})," or ",(0,n.jsx)(t.code,{children:"x86-64"}),"):"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-c",children:'static void dump_code(void *code, sljit_uw len)\n{\n    FILE *fp = fopen("/tmp/sljit_dump", "wb");\n    if (!fp)\n        return;\n    fwrite(code, len, 1, fp);\n    fclose(fp);\n#if defined(SLJIT_CONFIG_X86_64)\n    system("objdump -b binary -m l1om -D /tmp/sljit_dump");\n#elif defined(SLJIT_CONFIG_X86_32)\n    system("objdump -b binary -m i386 -D /tmp/sljit_dump");\n#endif\n}\n'})}),"\n",(0,n.jsxs)(t.p,{children:["And lastly, to see SLJIT used in a more complex scenario, take a look at ",(0,n.jsx)(t.a,{href:"https://github.com/zherczeg/sljit/blob/master/docs/tutorial/sources/brainfuck.c",children:"this"})," ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Brainfuck",children:"Brainfuck"})," compiler."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var r=o(6540);const n={},s=r.createContext(n);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);