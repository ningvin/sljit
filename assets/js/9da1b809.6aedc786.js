"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[437],{5430:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"general/getting-started/setup","title":"Setup","description":"Setting up SLJIT.","source":"@site/../general/getting-started/setup.md","sourceDirName":"general/getting-started","slug":"/general/getting-started/setup","permalink":"/sljit/docs/general/getting-started/setup","draft":false,"unlisted":false,"editUrl":"https://github.com/zherczeg/sljit/docs/docs/../general/getting-started/setup.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"Setting up SLJIT."},"sidebar":"generalSidebar","previous":{"title":"Getting Started","permalink":"/sljit/docs/category/getting-started"},"next":{"title":"Configuration","permalink":"/sljit/docs/general/getting-started/configuration"}}');var s=i(4848),r=i(8453);const l={sidebar_position:1,description:"Setting up SLJIT."},a="Setup",d={},o=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Using SLJIT in Your Project",id:"using-sljit-in-your-project",level:2},{value:"SLJIT as a Library",id:"sljit-as-a-library",level:3},{value:"SLJIT All-in-one",id:"sljit-all-in-one",level:3},{value:"Building the Tests",id:"building-the-tests",level:2},{value:"Using GNU Make",id:"using-gnu-make",level:3},{value:"Using CMake",id:"using-cmake",level:3},{value:"Building the Examples",id:"building-the-examples",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"setup",children:"Setup"})}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["To compile SLJIT, you need a C/C++ compiler with support for the ",(0,s.jsx)(n.code,{children:"C99"})," standard."]}),"\n",(0,s.jsxs)(n.p,{children:["In case you want to build ",(0,s.jsx)(n.a,{href:"#building-the-tests",children:"the tests"})," or ",(0,s.jsx)(n.a,{href:"#building-the-examples",children:"the examples"}),", you additionally need ",(0,s.jsx)(n.a,{href:"https://www.gnu.org/software/make/",children:"GNU Make"}),". If you are using the MSVC toolchain on Windows (where GNU Make is not available), you can use ",(0,s.jsx)(n.a,{href:"https://cmake.org/",children:"CMake"})," to build the tests instead."]}),"\n",(0,s.jsx)(n.h2,{id:"using-sljit-in-your-project",children:"Using SLJIT in Your Project"}),"\n",(0,s.jsxs)(n.p,{children:["Place the contents of the ",(0,s.jsxs)(n.a,{href:"https://github.com/zherczeg/sljit/tree/master/sljit_src",children:[(0,s.jsx)(n.code,{children:"sljit_src"})," folder"]})," in a suitable location in your project's source directory."]}),"\n",(0,s.jsx)(n.p,{children:"SLJIT can be used in one of two ways:"}),"\n",(0,s.jsx)(n.h3,{id:"sljit-as-a-library",children:"SLJIT as a Library"}),"\n",(0,s.jsxs)(n.p,{children:["Compile ",(0,s.jsx)(n.code,{children:"sljitLir.c"})," as a separate translation unit. Be sure to add ",(0,s.jsx)(n.code,{children:"sljit_src"})," to the list of include directories, e.g. by specifying ",(0,s.jsx)(n.code,{children:"-Ipath/to/sljit"})," when compiling with GCC / Clang."]}),"\n",(0,s.jsxs)(n.p,{children:["To use SLJIT, include ",(0,s.jsx)(n.code,{children:"sljitLir.h"})," and link against ",(0,s.jsx)(n.code,{children:"sljitLir.o"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"sljit-all-in-one",children:"SLJIT All-in-one"}),"\n",(0,s.jsxs)(n.p,{children:["In case you want to avoid exposing SLJIT's interface to other translation units, you can also embed SLJIT as a hidden implementation detail. To do so, define ",(0,s.jsx)(n.code,{children:"SLJIT_CONFIG_STATIC"})," before including ",(0,s.jsx)(n.code,{children:"sljitLir.c"})," (yes, the C file):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",metastring:'title="hidden.c"',children:'#define SLJIT_CONFIG_STATIC 1\n#include "sljitLir.c"\n\n// SLJIT can be used in hidden.c, but not in other translation units\n'})}),"\n",(0,s.jsx)(n.p,{children:"This technique can also be used to generate code for multiple target architectures:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",metastring:'title="x86-32.c"',children:'#define SLJIT_CONFIG_STATIC 1\n#define SLJIT_CONFIG_X86_32 1\n#include "sljitLir.c"\n\n// Generate code for x86 32-bit\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",metastring:'title="x86-64.c"',children:'#define SLJIT_CONFIG_STATIC 1\n#define SLJIT_CONFIG_X86_64 1\n#include "sljitLir.c"\n\n// Generate code for x86 64-bit\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Both ",(0,s.jsx)(n.code,{children:"x86-32.c"})," and ",(0,s.jsx)(n.code,{children:"x86-64.c"})," can be linked together into the same binary / library without running into issues due to clashing symbols."]}),"\n",(0,s.jsx)(n.h2,{id:"building-the-tests",children:"Building the Tests"}),"\n",(0,s.jsx)(n.h3,{id:"using-gnu-make",children:"Using GNU Make"}),"\n",(0,s.jsx)(n.p,{children:"Navigate to the root directory of the SLJIT repository and build the default target with GNU Make:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The test executable ",(0,s.jsx)(n.code,{children:"sljit_test"})," can be found in the ",(0,s.jsx)(n.code,{children:"bin"})," directory. To run the tests, simply execute it."]}),"\n",(0,s.jsx)(n.h3,{id:"using-cmake",children:"Using CMake"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"CMake support is currently only intended as a crutch for Windows systems where GNU Make is not available."})}),"\n",(0,s.jsx)(n.p,{children:"To build the tests on Windows using MSVC and NMake, do the following:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Open a suitable ",(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/visualstudio/ide/reference/command-prompt-powershell?view=vs-2022",children:"developer command prompt"})," and navigate into the root directory of the SLJIT repository"]}),"\n",(0,s.jsxs)(n.li,{children:["Execute the following:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'cmake -B bin -G "NMake Makefiles"\ncmake --build bin\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The test executable ",(0,s.jsx)(n.code,{children:"sljit_test.exe"})," can be found in the ",(0,s.jsx)(n.code,{children:"bin"})," directory."]}),"\n",(0,s.jsx)(n.h2,{id:"building-the-examples",children:"Building the Examples"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"You cannot currently build the examples on Windows using MSVC / CMake."})}),"\n",(0,s.jsxs)(n.p,{children:["Build the ",(0,s.jsx)(n.code,{children:"examples"})," target with GNU Make:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make examples\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The different example executables can be found in the ",(0,s.jsx)(n.code,{children:"bin"})," directory."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);