"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[467],{6268:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"tutorial/accessing-arrays","title":"Accessing Arrays","description":"Accessing arrays works similar to accessing structures. In case you are dealing with arrays of items of at most 8 bytes, you can utilize the shift of SLJIT\'s SLJITMEM2 addressing mode. For example, assuming you have the base address of an array of sljitsws in S0 and want to access the S2-th item:","source":"@site/../tutorial/06-accessing-arrays.md","sourceDirName":"tutorial","slug":"/tutorial/accessing-arrays","permalink":"/sljit/docs/tutorial/accessing-arrays","draft":false,"unlisted":false,"editUrl":"https://github.com/zherczeg/sljit/docs/docs/../tutorial/06-accessing-arrays.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Accessing Structures","permalink":"/sljit/docs/tutorial/accessing-structures"},"next":{"title":"Local Variables","permalink":"/sljit/docs/tutorial/local-variables"}}');var a=t(4848),r=t(8453);const c={},i="Accessing Arrays",o={},l=[];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"accessing-arrays",children:"Accessing Arrays"})}),"\n",(0,a.jsxs)(s.p,{children:["Accessing arrays works similar to accessing structures. In case you are dealing with arrays of items of at most 8 bytes, you can utilize the shift of SLJIT's ",(0,a.jsx)(s.code,{children:"SLJIT_MEM2"})," addressing mode. For example, assuming you have the base address of an array of ",(0,a.jsx)(s.code,{children:"sljit_sw"}),"s in ",(0,a.jsx)(s.code,{children:"S0"})," and want to access the ",(0,a.jsx)(s.code,{children:"S2"}),"-th item:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-c",children:"sljit_sw s0[];\nr0 = s0[s2];\n"})}),"\n",(0,a.jsxs)(s.p,{children:["You can simply use ",(0,a.jsx)(s.code,{children:"SLJIT_WORD_SHIFT"})," to correctly account for the size of each item:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-c",children:"sljit_emit_op1(C, SLJIT_MOV, SLJIT_R0, 0, SLJIT_MEM2(SLJIT_S0, SLJIT_S2), SLJIT_WORD_SHIFT);\n"})}),"\n",(0,a.jsxs)(s.p,{children:["In case the size of an item cannot be represented with ",(0,a.jsx)(s.code,{children:"SLJIT_MEM2"}),"'s shift, you can still fall back to calculating the offset manually and passing it into ",(0,a.jsx)(s.code,{children:"SLJIT_MEM1"}),". This can be combined with structure access as well. Suppose you want to assemble the following:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-c",children:"struct point_st {\n\tsljit_sw x;\n\tsljit_s32 y;\n\tsljit_s16 z;\n\tsljit_s8 d;\n};\n\npoint_st s0[];\nr0 = s0[s2].x;\n"})}),"\n",(0,a.jsxs)(s.p,{children:["As ",(0,a.jsx)(s.code,{children:"point_st"})," is larger than 8 bytes, you need to convert the array index to a byte offset beforehand and store it in a temporary:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-c",children:"/* calculate the array index: R2 = S2 * sizeof(point_st) */\nsljit_emit_op2(C, SLJIT_MUL, SLJIT_R1, 0, SLJIT_S2, 0, SLJIT_IMM, sizeof(struct point_st));\n/* access the array item: R0 = S0[R2] */\nsljit_emit_op1(C, SLJIT_MOV, SLJIT_R0, 0, SLJIT_MEM1(SLJIT_S0), SLJIT_R2);\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Above example relies on the fact that ",(0,a.jsx)(s.code,{children:"x"})," is the first member of ",(0,a.jsx)(s.code,{children:"point_st"})," and thus shares its address with the surrounding struct. In case you want to access a different member, you need to further take its offset into account."]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsxs)(s.em,{children:["The complete source code of the example can be found ",(0,a.jsx)(s.a,{href:"https://github.com/zherczeg/sljit/blob/master/docs/tutorial/sources/array_access.c",children:"here"}),"."]})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>i});var n=t(6540);const a={},r=n.createContext(a);function c(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);